@use "./variables" as *;
@use "sass:map";

@mixin respond-min($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin transition($prop: all, $speed: $transition) {
  transition: $prop $speed;
}

@mixin wrap($size: site) {
  @if $size == site {
    max-width: $max-width;
  } @else if $size == content {
    max-width: $content-width;
  }

  margin-inline: auto;
  padding-inline: 16px;

  @include respond(md) {
    padding-inline: 30px;
  }

  @include respond(lg) {
    padding-inline: 90px;
  }
}

@mixin textstyle($type) {
  @if $type == title {
    font-size: $font-size-title;
    font-weight: $font-weight-title;
    line-height: $line-height-title;
  } @else if $type == button {
    font-size: $font-size-button;
    font-weight: $font-weight-button;
    line-height: $line-height-button;
  } @else if $type == text {
    font-size: $font-size-text;
    font-weight: $font-weight-text;
    line-height: $line-height-text;
  }
}

@mixin respond($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);

  @if $value {
    @media (min-width: $value) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' is not defined.";
  }
}

@mixin horizontal-scroll($gap: 1rem) {
  display: flex;
  gap: $gap;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  padding-bottom: 1rem;

  & {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  &::-webkit-scrollbar {
    display: none;
  }

  > * {
    flex: 0 0 auto;
    scroll-snap-align: start;
  }
}

